{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Willi\\\\OneDrive\\\\Documents\\\\GitHub\\\\IoTAdminPortal\\\\components\\\\CustomTabs\\\\CustomTabs.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // material-ui components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\"; // core components\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport styles from \"assets/jss/nextjs-material-dashboard/components/customTabsStyle.js\";\nexport default function CustomTabs(props) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, value) => {\n    setValue(value);\n  };\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const {\n    headerColor,\n    plainTabs,\n    tabs,\n    title,\n    rtlActive\n  } = props;\n  const cardTitle = classNames({\n    [classes.cardTitle]: true,\n    [classes.cardTitleRTL]: rtlActive\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    plain: plainTabs,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      color: headerColor,\n      plain: plainTabs,\n      children: [title !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        classes: {\n          root: classes.tabsRoot,\n          indicator: classes.displayNone,\n          scrollButtons: classes.displayNone\n        },\n        variant: \"scrollable\",\n        scrollButtons: \"auto\",\n        children: tabs.map((prop, key) => {\n          var icon = {};\n\n          if (prop.tabIcon) {\n            icon = {\n              icon: /*#__PURE__*/_jsxDEV(prop.tabIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 23\n              }, this)\n            };\n          }\n\n          return /*#__PURE__*/_jsxDEV(Tab, _objectSpread({\n            classes: {\n              root: classes.tabRootButton,\n              selected: classes.tabSelected,\n              wrapper: classes.tabWrapper\n            },\n            label: prop.tabName\n          }, icon), key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: tabs.map((prop, key) => {\n        if (key === value) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: prop.tabContent\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 20\n          }, this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nCustomTabs.propTypes = {\n  headerColor: PropTypes.oneOf([\"warning\", \"success\", \"danger\", \"info\", \"primary\", \"rose\", \"dark\"]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    tabName: PropTypes.string.isRequired,\n    tabIcon: PropTypes.object,\n    tabContent: PropTypes.node.isRequired\n  })),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Willi/OneDrive/Documents/GitHub/IoTAdminPortal/components/CustomTabs/CustomTabs.js"],"names":["React","classNames","PropTypes","makeStyles","Tabs","Tab","Card","CardBody","CardHeader","styles","CustomTabs","props","value","setValue","useState","handleChange","event","useStyles","classes","headerColor","plainTabs","tabs","title","rtlActive","cardTitle","cardTitleRTL","undefined","root","tabsRoot","indicator","displayNone","scrollButtons","map","prop","key","icon","tabIcon","tabRootButton","selected","tabSelected","wrapper","tabWrapper","tabName","tabContent","propTypes","oneOf","string","arrayOf","shape","isRequired","object","node","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\n// core components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/customTabsStyle.js\";\r\n\r\nexport default function CustomTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\r\n  const cardTitle = classNames({\r\n    [classes.cardTitle]: true,\r\n    [classes.cardTitleRTL]: rtlActive,\r\n  });\r\n  return (\r\n    <Card plain={plainTabs}>\r\n      <CardHeader color={headerColor} plain={plainTabs}>\r\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          classes={{\r\n            root: classes.tabsRoot,\r\n            indicator: classes.displayNone,\r\n            scrollButtons: classes.displayNone,\r\n          }}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n        >\r\n          {tabs.map((prop, key) => {\r\n            var icon = {};\r\n            if (prop.tabIcon) {\r\n              icon = {\r\n                icon: <prop.tabIcon />,\r\n              };\r\n            }\r\n            return (\r\n              <Tab\r\n                classes={{\r\n                  root: classes.tabRootButton,\r\n                  selected: classes.tabSelected,\r\n                  wrapper: classes.tabWrapper,\r\n                }}\r\n                key={key}\r\n                label={prop.tabName}\r\n                {...icon}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {tabs.map((prop, key) => {\r\n          if (key === value) {\r\n            return <div key={key}>{prop.tabContent}</div>;\r\n          }\r\n          return null;\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomTabs.propTypes = {\r\n  headerColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n    \"dark\",\r\n  ]),\r\n  title: PropTypes.string,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabName: PropTypes.string.isRequired,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  rtlActive: PropTypes.bool,\r\n  plainTabs: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}