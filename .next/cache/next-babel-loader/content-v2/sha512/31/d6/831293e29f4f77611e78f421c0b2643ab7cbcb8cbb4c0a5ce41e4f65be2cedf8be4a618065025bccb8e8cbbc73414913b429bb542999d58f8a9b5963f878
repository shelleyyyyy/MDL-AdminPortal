{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Willi\\\\OneDrive\\\\Documents\\\\GitHub\\\\nextjs-material-dashboard\\\\components\\\\Snackbar\\\\SnackbarContent.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/snackbarContentStyle.js\";\nexport default function SnackbarContent(props) {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const {\n    message,\n    color,\n    close,\n    icon,\n    rtlActive\n  } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        className: classes.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snack, {\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [icon !== undefined ? /*#__PURE__*/_jsxDEV(props.icon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: messageClasses,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this),\n    classes: {\n      root: classes.root + \" \" + classes[color],\n      message: classes.message,\n      action: classNames({\n        [classes.actionRTL]: rtlActive\n      })\n    },\n    action: action\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool\n};","map":{"version":3,"sources":["C:/Users/Willi/OneDrive/Documents/GitHub/nextjs-material-dashboard/components/Snackbar/SnackbarContent.js"],"names":["React","PropTypes","classNames","makeStyles","Snack","IconButton","Close","styles","SnackbarContent","props","useStyles","classes","message","color","close","icon","rtlActive","action","messageClasses","iconMessage","undefined","iconButton","root","actionRTL","propTypes","node","isRequired","oneOf","bool","object"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,yEAAnB;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC7C,QAAMC,SAAS,GAAGP,UAAU,CAACI,MAAD,CAA5B;AACA,QAAMI,OAAO,GAAGD,SAAS,EAAzB;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA;AAA/B,MAA6CP,KAAnD;AACA,MAAIQ,MAAM,GAAG,EAAb;AACA,QAAMC,cAAc,GAAGhB,UAAU,CAAC;AAChC,KAACS,OAAO,CAACQ,WAAT,GAAuBJ,IAAI,KAAKK;AADA,GAAD,CAAjC;;AAGA,MAAIN,KAAK,KAAKM,SAAd,EAAyB;AACvBH,IAAAA,MAAM,GAAG,cACP,QAAC,UAAD;AACE,MAAA,SAAS,EAAEN,OAAO,CAACU,UADrB;AAGE,oBAAW,OAHb;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA,6BAME,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEV,OAAO,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AANF,OAEM,OAFN;AAAA;AAAA;AAAA;AAAA,YADO,CAAT;AAUD;;AACD,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,eACL;AAAA,iBACGC,IAAI,KAAKK,SAAT,gBAAqB,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAET,OAAO,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,cAArB,GAA+D,IADlE,eAEE;AAAM,QAAA,SAAS,EAAEG,cAAjB;AAAA,kBAAkCN;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAOE,IAAA,OAAO,EAAE;AACPU,MAAAA,IAAI,EAAEX,OAAO,CAACW,IAAR,GAAe,GAAf,GAAqBX,OAAO,CAACE,KAAD,CAD3B;AAEPD,MAAAA,OAAO,EAAED,OAAO,CAACC,OAFV;AAGPK,MAAAA,MAAM,EAAEf,UAAU,CAAC;AAAE,SAACS,OAAO,CAACY,SAAT,GAAqBP;AAAvB,OAAD;AAHX,KAPX;AAYE,IAAA,MAAM,EAAEC;AAZV;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;AAEDT,eAAe,CAACgB,SAAhB,GAA4B;AAC1BZ,EAAAA,OAAO,EAAEX,SAAS,CAACwB,IAAV,CAAeC,UADE;AAE1Bb,EAAAA,KAAK,EAAEZ,SAAS,CAAC0B,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAAhB,CAFmB;AAG1Bb,EAAAA,KAAK,EAAEb,SAAS,CAAC2B,IAHS;AAI1Bb,EAAAA,IAAI,EAAEd,SAAS,CAAC4B,MAJU;AAK1Bb,EAAAA,SAAS,EAAEf,SAAS,CAAC2B;AALK,CAA5B","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/SnackbarContent\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/snackbarContentStyle.js\";\r\n\r\nexport default function SnackbarContent(props) {\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined,\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>,\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      classes={{\r\n        root: classes.root + \" \" + classes[color],\r\n        message: classes.message,\r\n        action: classNames({ [classes.actionRTL]: rtlActive }),\r\n      }}\r\n      action={action}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbarContent.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  rtlActive: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}