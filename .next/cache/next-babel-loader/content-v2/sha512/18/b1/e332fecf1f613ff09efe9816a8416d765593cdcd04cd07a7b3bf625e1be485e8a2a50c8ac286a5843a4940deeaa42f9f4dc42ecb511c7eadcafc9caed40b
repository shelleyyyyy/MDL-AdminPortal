{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Willi\\\\OneDrive\\\\Documents\\\\GitHub\\\\nextjs-material-dashboard\\\\components\\\\Navbars\\\\Navbar.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { useRouter } from \"next/router\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/nextjs-material-dashboard/components/headerStyle.js\";\nexport default function Header(props) {\n  // used for checking current route\n  const router = useRouter(); // create styles for this component\n\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n\n  function makeBrand() {\n    var name = \"NextJS Material Dashboard\";\n    props.routes.map(prop => {\n      if (router.route.indexOf(prop.layout + prop.path) !== -1) {\n        name = props.rtlActive ? prop.rtlName : prop.name;\n      }\n\n      return null;\n    });\n    return name;\n  }\n\n  const {\n    color\n  } = props;\n  const appBarClasses = classNames({\n    [\" \" + classes[color]]: color\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    className: classes.appBar + appBarClasses,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.flex,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"transparent\",\n          href: \"#\",\n          className: classes.title,\n          children: makeBrand()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        implementation: \"css\",\n        children: props.rtlActive ? /*#__PURE__*/_jsxDEV(RTLNavbarLinks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(AdminNavbarLinks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        mdUp: true,\n        implementation: \"css\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          onClick: props.handleDrawerToggle,\n          children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  routes: PropTypes.arrayOf(PropTypes.object)\n};","map":{"version":3,"sources":["C:/Users/Willi/OneDrive/Documents/GitHub/nextjs-material-dashboard/components/Navbars/Navbar.js"],"names":["React","classNames","PropTypes","useRouter","makeStyles","AppBar","Toolbar","IconButton","Hidden","Menu","AdminNavbarLinks","RTLNavbarLinks","Button","styles","Header","props","router","useStyles","classes","makeBrand","name","routes","map","prop","route","indexOf","layout","path","rtlActive","rtlName","color","appBarClasses","appBar","container","flex","title","handleDrawerToggle","propTypes","oneOf","bool","func","arrayOf","object"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useRouter } from \"next/router\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n// @material-ui/icons\r\nimport Menu from \"@material-ui/icons/Menu\";\r\n// core components\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"./RTLNavbarLinks.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/headerStyle.js\";\r\n\r\nexport default function Header(props) {\r\n  // used for checking current route\r\n  const router = useRouter();\r\n  // create styles for this component\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  function makeBrand() {\r\n    var name = \"NextJS Material Dashboard\";\r\n    props.routes.map((prop) => {\r\n      if (router.route.indexOf(prop.layout + prop.path) !== -1) {\r\n        name = props.rtlActive ? prop.rtlName : prop.name;\r\n      }\r\n      return null;\r\n    });\r\n    return name;\r\n  }\r\n  const { color } = props;\r\n  const appBarClasses = classNames({\r\n    [\" \" + classes[color]]: color,\r\n  });\r\n  return (\r\n    <AppBar className={classes.appBar + appBarClasses}>\r\n      <Toolbar className={classes.container}>\r\n        <div className={classes.flex}>\r\n          {/* Here we create navbar brand, based on route name */}\r\n          <Button color=\"transparent\" href=\"#\" className={classes.title}>\r\n            {makeBrand()}\r\n          </Button>\r\n        </div>\r\n        <Hidden smDown implementation=\"css\">\r\n          {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n        </Hidden>\r\n        <Hidden mdUp implementation=\"css\">\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={props.handleDrawerToggle}\r\n          >\r\n            <Menu />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {\r\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}