{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Willi\\\\OneDrive\\\\Documents\\\\GitHub\\\\nextjs-material-dashboard\\\\components\\\\Snackbar\\\\Snackbar.js\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\"; // @material-ui/icons\n\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport styles from \"assets/jss/nextjs-material-dashboard/components/snackbarContentStyle.js\";\nexport default function Snackbar(props) {\n  const useStyles = makeStyles(styles);\n  const classes = useStyles();\n  const {\n    message,\n    color,\n    close,\n    icon,\n    place,\n    open,\n    rtlActive\n  } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n\n  if (close !== undefined) {\n    action = [/*#__PURE__*/_jsxDEV(IconButton, {\n      className: classes.iconButton,\n      \"aria-label\": \"Close\",\n      color: \"inherit\",\n      onClick: () => props.closeNotification(),\n      children: /*#__PURE__*/_jsxDEV(Close, {\n        className: classes.close\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, \"close\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)];\n  }\n\n  return /*#__PURE__*/_jsxDEV(Snack, {\n    anchorOrigin: {\n      vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n      horizontal: place.indexOf(\"l\") !== -1 ? \"left\" : place.indexOf(\"c\") !== -1 ? \"center\" : \"right\"\n    },\n    open: open,\n    message: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [icon !== undefined ? /*#__PURE__*/_jsxDEV(props.icon, {\n        className: classes.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: messageClasses,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this),\n    action: action,\n    ContentProps: {\n      classes: {\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames({\n          [classes.actionRTL]: rtlActive\n        })\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func\n};","map":{"version":3,"sources":["C:/Users/Willi/OneDrive/Documents/GitHub/nextjs-material-dashboard/components/Snackbar/Snackbar.js"],"names":["React","classNames","PropTypes","makeStyles","Snack","IconButton","Close","styles","Snackbar","props","useStyles","classes","message","color","close","icon","place","open","rtlActive","action","messageClasses","iconMessage","undefined","iconButton","closeNotification","vertical","indexOf","horizontal","root","actionRTL","propTypes","node","isRequired","oneOf","bool","object","func"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,0BAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,yEAAnB;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACtC,QAAMC,SAAS,GAAGP,UAAU,CAACI,MAAD,CAA5B;AACA,QAAMI,OAAO,GAAGD,SAAS,EAAzB;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAzB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA,IAAtC;AAA4CC,IAAAA;AAA5C,MAA0DT,KAAhE;AACA,MAAIU,MAAM,GAAG,EAAb;AACA,QAAMC,cAAc,GAAGnB,UAAU,CAAC;AAChC,KAACU,OAAO,CAACU,WAAT,GAAuBN,IAAI,KAAKO;AADA,GAAD,CAAjC;;AAGA,MAAIR,KAAK,KAAKQ,SAAd,EAAyB;AACvBH,IAAAA,MAAM,GAAG,cACP,QAAC,UAAD;AACE,MAAA,SAAS,EAAER,OAAO,CAACY,UADrB;AAGE,oBAAW,OAHb;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,OAAO,EAAE,MAAMd,KAAK,CAACe,iBAAN,EALjB;AAAA,6BAOE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAEb,OAAO,CAACG;AAA1B;AAAA;AAAA;AAAA;AAAA;AAPF,OAEM,OAFN;AAAA;AAAA;AAAA;AAAA,YADO,CAAT;AAWD;;AACD,sBACE,QAAC,KAAD;AACE,IAAA,YAAY,EAAE;AACZW,MAAAA,QAAQ,EAAET,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAAxB,GAA4B,QAA5B,GAAuC,KADrC;AAEZC,MAAAA,UAAU,EACRX,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAAxB,GACI,MADJ,GAEIV,KAAK,CAACU,OAAN,CAAc,GAAd,MAAuB,CAAC,CAAxB,GACA,QADA,GAEA;AAPM,KADhB;AAUE,IAAA,IAAI,EAAET,IAVR;AAWE,IAAA,OAAO,eACL;AAAA,iBACGF,IAAI,KAAKO,SAAT,gBAAqB,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,SAAS,EAAEX,OAAO,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,cAArB,GAA+D,IADlE,eAEE;AAAM,QAAA,SAAS,EAAEK,cAAjB;AAAA,kBAAkCR;AAAlC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAiBE,IAAA,MAAM,EAAEO,MAjBV;AAkBE,IAAA,YAAY,EAAE;AACZR,MAAAA,OAAO,EAAE;AACPiB,QAAAA,IAAI,EAAEjB,OAAO,CAACiB,IAAR,GAAe,GAAf,GAAqBjB,OAAO,CAACE,KAAD,CAD3B;AAEPD,QAAAA,OAAO,EAAED,OAAO,CAACC,OAFV;AAGPO,QAAAA,MAAM,EAAElB,UAAU,CAAC;AAAE,WAACU,OAAO,CAACkB,SAAT,GAAqBX;AAAvB,SAAD;AAHX;AADG;AAlBhB;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;AAEDV,QAAQ,CAACsB,SAAT,GAAqB;AACnBlB,EAAAA,OAAO,EAAEV,SAAS,CAAC6B,IAAV,CAAeC,UADL;AAEnBnB,EAAAA,KAAK,EAAEX,SAAS,CAAC+B,KAAV,CAAgB,CAAC,MAAD,EAAS,SAAT,EAAoB,SAApB,EAA+B,QAA/B,EAAyC,SAAzC,CAAhB,CAFY;AAGnBnB,EAAAA,KAAK,EAAEZ,SAAS,CAACgC,IAHE;AAInBnB,EAAAA,IAAI,EAAEb,SAAS,CAACiC,MAJG;AAKnBnB,EAAAA,KAAK,EAAEd,SAAS,CAAC+B,KAAV,CAAgB,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,CAAhB,CALY;AAMnBhB,EAAAA,IAAI,EAAEf,SAAS,CAACgC,IANG;AAOnBhB,EAAAA,SAAS,EAAEhB,SAAS,CAACgC,IAPF;AAQnBV,EAAAA,iBAAiB,EAAEtB,SAAS,CAACkC;AARV,CAArB","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snack from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n// @material-ui/icons\r\nimport Close from \"@material-ui/icons/Close\";\r\n// core components\r\nimport styles from \"assets/jss/nextjs-material-dashboard/components/snackbarContentStyle.js\";\r\n\r\nexport default function Snackbar(props) {\r\n  const useStyles = makeStyles(styles);\r\n  const classes = useStyles();\r\n  const { message, color, close, icon, place, open, rtlActive } = props;\r\n  var action = [];\r\n  const messageClasses = classNames({\r\n    [classes.iconMessage]: icon !== undefined,\r\n  });\r\n  if (close !== undefined) {\r\n    action = [\r\n      <IconButton\r\n        className={classes.iconButton}\r\n        key=\"close\"\r\n        aria-label=\"Close\"\r\n        color=\"inherit\"\r\n        onClick={() => props.closeNotification()}\r\n      >\r\n        <Close className={classes.close} />\r\n      </IconButton>,\r\n    ];\r\n  }\r\n  return (\r\n    <Snack\r\n      anchorOrigin={{\r\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\r\n        horizontal:\r\n          place.indexOf(\"l\") !== -1\r\n            ? \"left\"\r\n            : place.indexOf(\"c\") !== -1\r\n            ? \"center\"\r\n            : \"right\",\r\n      }}\r\n      open={open}\r\n      message={\r\n        <div>\r\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\r\n          <span className={messageClasses}>{message}</span>\r\n        </div>\r\n      }\r\n      action={action}\r\n      ContentProps={{\r\n        classes: {\r\n          root: classes.root + \" \" + classes[color],\r\n          message: classes.message,\r\n          action: classNames({ [classes.actionRTL]: rtlActive }),\r\n        },\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSnackbar.propTypes = {\r\n  message: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\r\n  close: PropTypes.bool,\r\n  icon: PropTypes.object,\r\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\r\n  open: PropTypes.bool,\r\n  rtlActive: PropTypes.bool,\r\n  closeNotification: PropTypes.func,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}